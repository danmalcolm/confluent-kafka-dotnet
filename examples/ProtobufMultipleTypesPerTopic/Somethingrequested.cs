// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: somethingrequested.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Confluent.Kafka.Examples.ProtobufMultipleTypesPerTopic {

  /// <summary>Holder for reflection information generated from somethingrequested.proto</summary>
  public static partial class SomethingrequestedReflection {

    #region Descriptor
    /// <summary>File descriptor for somethingrequested.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SomethingrequestedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chhzb21ldGhpbmdyZXF1ZXN0ZWQucHJvdG8SNmNvbmZsdWVudC5rYWZrYS5l",
            "eGFtcGxlcy5wcm90b2J1Zk11bHRpcGxlVHlwZXNQZXJUb3BpYyJNChJTb21l",
            "dGhpbmdSZXF1ZXN0ZWQSCgoCSWQYASABKAkSFgoOUmVxdWVzdE1lc3NhZ2UY",
            "AiABKAkSEwoLUmVxdWVzdERhdGUYAyABKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Confluent.Kafka.Examples.ProtobufMultipleTypesPerTopic.SomethingRequested), global::Confluent.Kafka.Examples.ProtobufMultipleTypesPerTopic.SomethingRequested.Parser, new[]{ "Id", "RequestMessage", "RequestDate" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SomethingRequested : pb::IMessage<SomethingRequested> {
    private static readonly pb::MessageParser<SomethingRequested> _parser = new pb::MessageParser<SomethingRequested>(() => new SomethingRequested());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SomethingRequested> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Confluent.Kafka.Examples.ProtobufMultipleTypesPerTopic.SomethingrequestedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SomethingRequested() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SomethingRequested(SomethingRequested other) : this() {
      id_ = other.id_;
      requestMessage_ = other.requestMessage_;
      requestDate_ = other.requestDate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SomethingRequested Clone() {
      return new SomethingRequested(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RequestMessage" field.</summary>
    public const int RequestMessageFieldNumber = 2;
    private string requestMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestMessage {
      get { return requestMessage_; }
      set {
        requestMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RequestDate" field.</summary>
    public const int RequestDateFieldNumber = 3;
    private string requestDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestDate {
      get { return requestDate_; }
      set {
        requestDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SomethingRequested);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SomethingRequested other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RequestMessage != other.RequestMessage) return false;
      if (RequestDate != other.RequestDate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (RequestMessage.Length != 0) hash ^= RequestMessage.GetHashCode();
      if (RequestDate.Length != 0) hash ^= RequestDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (RequestMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RequestMessage);
      }
      if (RequestDate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RequestDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (RequestMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestMessage);
      }
      if (RequestDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SomethingRequested other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.RequestMessage.Length != 0) {
        RequestMessage = other.RequestMessage;
      }
      if (other.RequestDate.Length != 0) {
        RequestDate = other.RequestDate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            RequestMessage = input.ReadString();
            break;
          }
          case 26: {
            RequestDate = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
